#############################################################################
# CI/CD steps for Cloud Build to test and deploy a TFX pipeline to Vertex AI.
#############################################################################

steps:

# Clone the repository.
- name: 'gcr.io/cloud-builders/git'
  args: ['clone', '--single-branch', '--branch',
         '$_BRANCH', '$_REPO_URL',
         '--depth', '1',
         '--verbose']
  id: 'Clone Repository'
  

# Run datasource_utils unit tests.
- name: '$_CICD_IMAGE_URI'
  entrypoint: 'pytest'
  args: ['src/tests/datasource_utils_tests.py', '-s']
  dir: 'tfdf-rules-tfx'
  env: 
  - 'PROJECT=$_PROJECT'  
  id: 'Unit Test Datasource Utils'
  waitFor: ['Clone Repository']


# Run model unit tests.
- name: '$_CICD_IMAGE_URI'
  entrypoint: 'pytest'
  args: ['src/tests/model_tests.py', '-s']
  dir: 'tfdf-rules-tfx'
  id: 'Unit Test Model'
  waitFor: ['Clone Repository']
  timeout: 1800s


# Test e2e pipeline using local runner.
- name: '$_CICD_IMAGE_URI'
  entrypoint: 'pytest'
  args: ['src/tests/pipeline_deployment_tests.py::test_e2e_pipeline', '-s']
  dir: 'tfdf-rules-tfx'
  env: 
  - 'PROJECT=$_PROJECT'  
  - 'REGION=$_REGION'
  - 'MODEL_DISPLAY_NAME=$_MODEL_DISPLAY_NAME'
  - 'DATASET_DISPLAY_NAME=$_DATASET_DISPLAY_NAME'  
  - 'GCS_LOCATION=$_TEST_GCS_LOCATION'
  - 'TRAIN_LIMIT=$_CI_TRAIN_LIMIT'
  - 'TEST_LIMIT=$_CI_TEST_LIMIT'  
  - 'UPLOAD_MODEL=$_CI_UPLOAD_MODEL'
  - 'ACCURACY_THRESHOLD=$_CI_ACCURACY_THRESHOLD'
  id: 'Local Test E2E Pipeline'
  waitFor: ['Unit Test Datasource Utils', 'Unit Test Model']
  timeout: 1800s


# Build the image that encapsulates the pipeline.
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', '$_TFX_IMAGE_URI', '.']
  dir: 'tfdf-rules-tfx'
  id: 'Build TFX Image'
  waitFor: ['Local Test E2E Pipeline']
  
  
# Compile the pipeline.
- name: '$_CICD_IMAGE_URI'
  entrypoint: 'python'
  args: ['build/utils.py',
          '--mode', 'compile-pipeline',
          '--pipeline-name', '$_PIPELINE_NAME'
          ]
  dir: 'tfdf-rules-tfx'
  env: 
  - 'PROJECT=$_PROJECT'  
  - 'REGION=$_REGION'
  - 'MODEL_DISPLAY_NAME=$_MODEL_DISPLAY_NAME'
  - 'DATASET_DISPLAY_NAME=$_DATASET_DISPLAY_NAME'  
  - 'GCS_LOCATION=$_GCS_LOCATION' 
  - 'TFX_IMAGE_URI=$_TFX_IMAGE_URI' 
  - 'BEAM_RUNNER=$_BEAM_RUNNER'
  - 'TRAINING_RUNNER=$_TRAINING_RUNNER'
  - 'ENABLE_CACHE=$_ENABLE_CACHE'
  id: 'Compile Pipeline'
  waitFor: ['Local Test E2E Pipeline']
  
  
# Upload compiled pipeline to GCS.
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', '$_PIPELINE_NAME.json', '$_PIPELINES_STORE']
  dir: 'tfdf-rules-tfx'
  id:  'Upload Pipeline to GCS'
  waitFor: ['Compile Pipeline']
  

# Push TFX Image to Container Registy.
images: ['$_TFX_IMAGE_URI']

timeout: 1800s